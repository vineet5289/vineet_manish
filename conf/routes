# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET     /        	                        	   controllers.SRPController.index()
GET		/gp_institute							   controllers.SRPController.headInstituteHome()
GET		/institute								   controllers.SRPController.instituteHome()
GET		/students								   controllers.SRPController.studentsHome()
GET		/employee								   controllers.SRPController.employeeHome()
GET		/test_deadbolt_1						   controllers.TestController.subjectPresent()
GET		/test_deadbolt_2						   controllers.TestController.subjectPresent2()
GET		/test_deadbolt_3						   controllers.TestController.subjectPresent3()
GET		/test_deadbolt_4						   controllers.TestController.subjectPresent4()
GET		/test_deadbolt_5						   controllers.TestController.subjectPresent5()
GET		/test_deadbolt_6/:schoolId					controllers.TestController.subjectPresent6(schoolId: Long)
GET		/test_deadbolt_7/:schoolId					controllers.TestController.subjectPresent7(schoolId: Long)

# login handler
GET     /login                       			   controllers.login_logout.LoginController.preLogin()
POST    /login                       			   controllers.login_logout.LoginController.postLogin(phone: String ?="")
GET     /logout                       			   controllers.login_logout.LoginController.logout()

# Message Api
GET			/sendMessage							   controllers.message.MobileMessageController.sendMessage()

# Notification Listening Controller
#GET     	/listen                           		   controllers.message.NotificationListeningController.listen()
#GET     	/listeningWS                     		   controllers.message.NotificationListeningController.listeningSocket()

# Notification Controller
POST     	/notification                              controllers.message.NotificationController.notification()

# add new institute request
GET      	/newinstituterequest                	   controllers.institute.NewInstituteRequestController.preAddNewInstituteRequest()
POST     	/newinstituterequest                       controllers.institute.NewInstituteRequestController.postAddNewInstituteRequest()


# school registration request
POST      	/submitopt                            	   controllers.institute.InstituteRegistrationController.submitOTP()
POST     	/registerinstitute            	           controllers.institute.InstituteRegistrationController.postInstituteRegistrationRequest()

#school info and edit
# add branch in group of institute
GET			/institute/add/branch				   	   controllers.institute.InstituteController.preAddInstituteBranch()
POST		/institute/add/branch				       controllers.institute.InstituteController.postAddInstituteBranch()
POST		/institute/switch/branch				   controllers.institute.InstituteController.switchBranch()

GET			/institute/show/profile					   controllers.institute.InstituteInfoController.getProfileInfo()
GET			/institute/edit/general					   controllers.institute.InstituteInfoController.getGeneralInfo()
POST		/institute/edit/general					   controllers.institute.InstituteInfoController.updateGeneralInfo()
GET			/institute/edit/shift					   controllers.institute.InstituteInfoController.getShiftInfo()
POST		/institute/edit/shift					   controllers.institute.InstituteInfoController.updateShiftInfo()
GET			/institute/edit/header					   controllers.institute.InstituteInfoController.getHeaderInfo()
POST		/institute/edit/header					   controllers.institute.InstituteInfoController.updateHeaderInfo()

GET			/institute/mand_info					   controllers.institute.InstituteInfoController.getInstituteMandInfo()
POST		/institute/mand_info					   controllers.institute.InstituteInfoController.updateInstituteMandInfo()
# employee registration request
GET			/add_emp								   controllers.employee.EmployeeController.preAddEmployeeRequest()
POST		/add_emp							   	   controllers.employee.EmployeeController.postAddEmployeeRequest()
GET			/view_emp							   	   controllers.employee.EmployeeController.viewAllEmployee()
GET			/delete_emp/:username					   controllers.employee.EmployeeController.deleteEmployee(username: String)
GET			/edit/:username/emp					   	   controllers.employee.EmployeeController.preEditEmployee(username:String, section:String ?= "general", type:String ?= "self")
POST		/edit/:username/emp					   	   controllers.employee.EmployeeController.postEditEmployee(username:String, section:String ?= "general", type:String ?= "self")
GET			/show/:username/emp						   controllers.employee.EmployeeController.showEmployeeInfo(username:String, section:String ?= "general", type:String ?= "self")
POST		/upload/emp/add_emp						   controllers.employee.EmployeeController.uploadEmpDetailsFile()

# students registration request
GET      	/registerstudent                 		   controllers.StudentController.preStudentRegistrationRequest()
POST     	/registerstudent            	       	   controllers.StudentController.postStudentRegistrationRequest()

# Map static resources from the /public folder to the /assets URL path
GET     	/assets/*file                              controllers.Assets.versioned(path="/public", file: Asset)
GET     	/assets/*file		                  	   controllers.Assets.at(path="/public", file: String)


# approved school

#GET			/approvedschool						   controllers.institute.NewInstituteRequestController.preApprovedNewSchoolRequest()
#POST		/approvedschool							   controllers.institute.NewInstituteRequestController.postApproveNewSchooldRequest()

# students and guardian registration

GET			/addnewstudents							   controllers.students_guardians.StudenstGuardian.preAddFressStudents()
POST		/addnewstudents							   controllers.students_guardians.StudenstGuardian.postAddFressStudents()

# class

GET			/class/add							   		controllers.institute.ClassController.preAddClass(sec: String ?="no")
POST		/class/add							   		controllers.institute.ClassController.postAddClass(classId: Long ?= 0, sec: String ?="no")
POST		/class/edit/:classId				   		controllers.institute.ClassController.editClass(classId: Long, sec: String ?="no", action: String ?="edit")
GET			/viewClass							   		controllers.institute.ClassController.viewAllClass(action: String ?="all")

# subject

GET			/subject/:classId/add						controllers.institute.SubjectController.preAddSubjects(classId: Long, secId: Long ?= 0, sec ?="no")
POST		/subject/:classId/add						controllers.institute.SubjectController.postAddSubjects(classId: Long, secId: Long ?= 0, sec ?="no")
GET			/subject/:subjectId/view				    controllers.institute.SubjectController.viewsSubjects(subjectId: Long, action: String ?="edit")
POST		/subject/:subjectId/edit				    controllers.institute.SubjectController.editSubject(subjectId: Long, action: String ?="edit")


#test
GET			/addTest							   		controllers.CustomController.testRoute()
POST		/addTest							   		controllers.CustomController.postRoute()
GET			/shift/:shiftId							    controllers.CustomController.returnShiftDetails(shiftId: Long)


# access rights
POST		/updateAccessRights						   controllers.AccessRightsController.addAccessRight()

# view all user
GET			/allUser/:schoolId							controllers.user.UserController.getUsers(schoolId: Long, category: String ?="")

# view all user
GET			/userInfo/:schoolId/:userName				controllers.user.UserController.getUser(schoolId: Long, userName:String, category: String ?="")

# initial registration
GET			/registration								controllers.SRPController.preRegistration(reg_user_request : String ?="ERROR")

#role
GET			/role										controllers.institute.RoleController.preAddRole()
POST		/add_role/:edit								controllers.institute.RoleController.createOrEditRole(edit : String)
POST		/edit_role/:edit							controllers.institute.RoleController.createOrEditRole(edit : String)
GET			/disable_role/:roleId						controllers.institute.RoleController.disableRole(roleId: Long)
GET			/enable_role/:roleId						controllers.institute.RoleController.enableRole(roleId: Long)

#role
GET			/group										controllers.institute.GroupController.preAddGroup()
POST		/add_group									controllers.institute.GroupController.postAddGroup()
POST		/disable_group								controllers.institute.GroupController.disableGroup()

#role
GET			/timetabel/create							controllers.institute.TimeTableController.preCreateTimeTable()
POST		/timetabel/create							controllers.institute.TimeTableController.postCreateTimeTable()

# permission
POST		/edit_permission							controllers.institute.RoleController.editPermission()

# file or image upload 

POST		/upload/:username/prof_img					controllers.file_controller.ImageController.uploadProfileImage(username) 

